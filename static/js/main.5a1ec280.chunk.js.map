{"version":3,"sources":["components/EventDetails/EventDetails.js","components/Event/Event.js","components/EventList/EventList.js","components/CitySearch/CitySearch.js","components/NumberOfEvents/NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["EventDetails","event","this","props","className","href","htmlLink","description","Component","Event","state","detailsButton","setState","summary","Date","start","dateTime","toString","location","showEventDetails","onClick","handleDetailsButtonClick","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","resultNumber","handleInputChange","mockData","kind","etag","status","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","results","getEvents","NProgress","window","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","data","localStorage","setItem","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","authUrl","getToken","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"2PAEqBA,E,4JACjB,WACI,IAAOC,EAASC,KAAKC,MAAdF,MACP,OACI,sBAAKG,UAAU,oBAAf,UACI,oBAAIA,UAAU,gBAAd,0BACA,mBAAGA,UAAU,eAAeC,KAAMJ,EAAMK,SAAxC,4CACA,mBAAGF,UAAU,sBAAb,SAAoCH,EAAMM,qB,GAPhBC,aCkC3BC,E,4MAhCXC,MAAQ,CACJC,cAAe,Q,8DAGnB,WACiC,SAA7BT,KAAKQ,MAAMC,cACTT,KAAKU,SAAS,CAACD,cAAe,SAC9BT,KAAKU,SAAS,CAACD,cAAe,W,8BAGpC,WACI,MAAoC,SAA7BT,KAAKQ,MAAMC,cAChB,KACA,cAAC,EAAD,CAAcV,MAAOC,KAAKC,MAAMF,U,oBAGtC,WAAU,IAAD,OACEA,EAASC,KAAKC,MAAdF,MACAU,EAAiBT,KAAKQ,MAAtBC,cACP,OACI,sBAAKP,UAAU,kBAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BH,EAAMY,UACnC,mBAAGT,UAAU,aAAb,SAA2B,IAAIU,KAAKb,EAAMc,MAAMC,UAAUC,aAC1D,mBAAGb,UAAU,iBAAb,oBAAmCH,EAAMY,QAAzC,cAAsDZ,EAAMiB,YAC3DhB,KAAKiB,sBAEV,wBAAQf,UAAU,iBAAiBgB,QAAS,kBAAM,EAAKC,4BAAvD,mBAAuFV,EAAvF,qB,GA5BIH,aCeLc,E,4JAdX,WACI,IAAOC,EAAUrB,KAAKC,MAAfoB,OACP,OACI,oBAAInB,UAAU,YAAd,SACKmB,EAAOC,KAAI,SAAAvB,GAAK,OACb,6BACI,cAAC,EAAD,CAAOA,MAAOA,KADTA,EAAMwB,a,GANXjB,aCDHkB,E,4MACjBhB,MAAQ,CACJiB,MAAM,GACNC,YAAa,GACbC,qBAAiBC,G,EAGrBC,mBAAqB,SAAC9B,GAClB,IAAM+B,EAAQ/B,EAAMgC,OAAOD,MACrBJ,EAAc,EAAKzB,MAAM+B,UAAUC,QAAO,SAACjB,GAC7C,OAAOA,EAASkB,cAAcC,QAAQL,EAAMI,gBAAkB,KAElE,EAAKxB,SAAS,CACVe,MAAOK,EACPJ,iB,EAIRU,kBAAoB,SAACC,GACjB,EAAK3B,SAAS,CACVe,MAAOY,EACPV,iBAAiB,IAGrB,EAAK1B,MAAMqC,aAAaD,I,4CAG5B,WAAU,IAAD,OACL,EAA8CrC,KAAKQ,MAA5CiB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,gBAC3B,OACI,sBAAKzB,UAAU,aAAf,UACI,uBAAOqC,KAAK,OACZrC,UAAU,OACV4B,MAAOL,EACPe,SAAUxC,KAAK6B,mBACfY,QAAS,WAAO,EAAK/B,SAAS,CAACiB,iBAAiB,OAGhD,qBAAIzB,UAAU,cAAcwC,MAAOf,EAAkB,GAAI,CAACgB,QAAS,QAAnE,UACKjB,EAAYJ,KAAI,SAACe,GAAD,OACb,oBAAqBnB,QAAS,kBAAM,EAAKkB,kBAAkBC,IAA3D,SAAyEA,GAAhEA,MAEb,oBAAcnB,QAAS,kBAAM,EAAKkB,kBAAkB,QAApD,SACI,gDADI,iB,GA1CY9B,aCAnBsC,E,4MACjBpC,MAAQ,CACJqC,aAAc,I,EAGlBC,kBAAoB,SAAC/C,GACjB,IAAM+B,EAAQ/B,EAAMgC,OAAOD,MAC3B,EAAKpB,SAAS,CACVmC,aAAcf,K,4CAItB,WACI,IAAOe,EAAgB7C,KAAKQ,MAArBqC,aACP,OACI,qBAAK3C,UAAU,iBAAf,SACI,uBAAOqC,KAAK,SACZrC,UAAU,gBACV4B,MAAOe,EACPL,SAAUxC,KAAK8C,0B,GAnBaxC,a,gDC+E7ByC,EAjFE,CACb,CACIC,KAAK,iBACLC,KAAK,qBACL1B,GAAG,8CACH2B,OAAO,YACP9C,SAAS,oJACT+C,QAAQ,2BACRC,QAAQ,2BACRzC,QAAQ,mBACRN,YAAY,uWACZW,SAAS,aACTqC,QAAQ,CACJC,MAAM,oCACNC,MAAK,GAETC,UAAU,CACNF,MAAM,oCACNC,MAAK,GAET1C,MAAM,CACFC,SAAS,4BACT2C,SAAS,iBAEbC,IAAI,CACA5C,SAAS,4BACT2C,SAAS,iBAEbE,iBAAiB,6BACjBC,kBAAkB,CACd9C,SAAS,4BACT2C,SAAS,iBAEbI,QAAQ,wCACRC,SAAS,EACTC,UAAU,CACNC,YAAW,GAEfC,UAAU,WAEd,CACIjB,KAAK,iBACLC,KAAK,qBACL1B,GAAG,8CACH2B,OAAO,YACP9C,SAAS,oJACT+C,QAAQ,2BACRC,QAAQ,2BACRzC,QAAQ,eACRN,YAAY,mSACZW,SAAS,kBACTqC,QAAQ,CACJC,MAAM,oCACNC,MAAK,GAETC,UAAU,CACNF,MAAM,oCACNC,MAAK,GAET1C,MAAM,CACFC,SAAS,4BACT2C,SAAS,iBAEbC,IAAI,CACA5C,SAAS,4BACT2C,SAAS,iBAEbE,iBAAiB,6BACjBC,kBAAkB,CACd9C,SAAS,4BACT2C,SAAS,iBAEbI,QAAQ,wCACRC,SAAS,EACTC,UAAU,CACNC,YAAW,GAEfC,UAAU,Y,gBCzELC,EAAmB,SAAC7C,GAC7B,IAAI6C,EAAmB7C,EAAOC,KAAI,SAACvB,GAAD,OAAWA,EAAMiB,YAEnD,OADa,YAAO,IAAImD,IAAID,KAa1BE,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACOC,MAAM,oDAAD,OAC6BF,IAEvDG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMF,UALT,cACTG,EADS,yBAORA,GAPQ,2CAAH,sDAUHC,EAAS,uCAAG,kCAAAR,EAAA,yDACrBS,IAAUlE,SAENmE,OAAOhE,SAASb,KAAK8E,WAAW,oBAHf,uBAIjBF,IAAUG,OAJO,kBAKVnC,GALU,uBAQDoC,IARC,YAQfC,EARe,gCAWjBC,IACMC,EAZW,oFAYwEF,GAZxE,UAaKG,IAAMC,IAAIF,GAbf,eAaXT,EAbW,QAcLY,OACJzD,EAAYkC,EAAiBW,EAAQY,KAAKpE,QAC9CqE,aAAaC,QAAQ,aAAcC,KAAKC,UAAUhB,EAAQY,OAC1DC,aAAaC,QAAQ,YAAaC,KAAKC,UAAU7D,KAErD+C,IAAUG,OAnBO,kBAoBVL,EAAQY,KAAKpE,QApBH,4CAAH,qDAwBT8D,EAAc,uCAAG,sCAAAb,EAAA,yDACpBD,EAAcqB,aAAaI,QAAQ,gBADf,KAEPzB,GAFO,qCAEeD,EAAWC,GAF1B,6BAEpB0B,EAFoB,KAItB1B,IAAe0B,EAAWnB,MAJJ,kCAKhBc,aAAaM,WAAW,gBALR,eAMhBC,EAAe,IAAIC,gBAAgBlB,OAAOhE,SAASmF,QANnC,UAOHF,EAAaT,IAAI,QAPd,WAOhBY,EAPgB,yCASIb,IAAMC,IACxB,+EAVc,eASZX,EATY,OAYXwB,EAAWxB,EAAQY,KAAnBY,QAZW,kBAaVrB,OAAOhE,SAASb,KAAOkG,GAbb,iCAefD,GAAQE,EAASF,IAfF,iCAiBnB/B,GAjBmB,4CAAH,qDAoBrBgB,EAAc,WAChB,GAAIL,OAAOuB,QAAQC,WAAaxB,OAAOhE,SAASyF,SAAU,CACtD,IAAIC,EAAM,UAAM1B,OAAOhE,SAAS2F,SAAtB,aAAmC3B,OAAOhE,SAAS4F,MAAnD,OAA0D5B,OAAOhE,SAASyF,UACpFzB,OAAOuB,QAAQC,UAAU,GAAI,GAAIE,GAGrC,IAAIA,EAAM,UAAM1B,OAAOhE,SAAS2F,SAAtB,aAAmC3B,OAAOhE,SAAS4F,MAAnD,OAA0D5B,OAAOhE,SAASyF,UACpFzB,OAAOuB,QAAQC,UAAU,GAAI,GAAIE,IAG/BJ,EAAQ,uCAAG,WAAOF,GAAP,mBAAA9B,EAAA,6DACPuC,EAAaC,mBAAmBV,GADzB,SAEgB7B,MAAM,wEAAD,OAC0CsC,IAE3ErC,MAAK,SAACC,GACH,OAAOA,EAAIC,UAEdC,OAAM,SAACC,GAAD,OAAWA,KARL,wBAENmC,EAFM,EAENA,eAQSrB,aAAaC,QAAQ,eAAgBoB,GAVxC,kBAYNA,GAZM,2CAAH,sDC3EOC,G,kNACnBxG,MAAQ,CACNa,OAAQ,GACRW,UAAW,I,EAgBbM,aAAe,SAACtB,GACd8D,IAAYN,MAAK,SAACnD,GAChB,IAAM4F,EAA+B,QAAbjG,EACtBK,EACAA,EAAOY,QAAO,SAAClC,GAAD,OAAWA,EAAMiB,WAAaA,KAC9C,EAAKN,SAAS,CACZW,OAAQ4F,Q,uDAnBd,WAAqB,IAAD,OAClBjH,KAAKkH,SAAU,EACfpC,IAAYN,MAAK,SAACnD,GACZ,EAAK6F,SACP,EAAKxG,SAAS,CAACW,SAAQW,UAAWkC,EAAiB7C,U,kCAKzD,WACErB,KAAKkH,SAAU,I,oBAcjB,WACE,MAA4BlH,KAAKQ,MAA1Ba,EAAP,EAAOA,OAAQW,EAAf,EAAeA,UACf,OACE,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,CAAYoC,aAActC,KAAKsC,aAAcN,UAAWA,IACxD,cAAC,EAAD,IACA,cAAC,EAAD,CAAWX,OAAQA,W,GApCMf,cCIb6G,QACW,cAA7BnC,OAAOhE,SAASoG,UAEe,UAA7BpC,OAAOhE,SAASoG,UAEhBpC,OAAOhE,SAASoG,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhD,MAAK,YAAkD,IAA/CiD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7D,MAAK,SAAC8D,GACLA,EAAaC,gBAEd5D,OAAM,SAACC,GACN4D,QAAQ5D,MAAMA,EAAM6D,YE/G5BnB,M","file":"static/js/main.5a1ec280.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nexport default class EventDetails extends Component {\r\n    render() {\r\n        const {event} = this.props;\r\n        return (\r\n            <div className=\"details-container\">\r\n                <h2 className=\"details-title\">About event:</h2>\r\n                <a className=\"details-link\" href={event.htmlLink}>See details on Google Calendar</a>\r\n                <p className=\"details-description\">{event.description}</p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport EventDetails from '../EventDetails/EventDetails';\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        detailsButton: 'show'\r\n    }\r\n\r\n    handleDetailsButtonClick() {\r\n        this.state.detailsButton === 'show'\r\n        ? this.setState({detailsButton: 'hide'})\r\n        : this.setState({detailsButton: 'show'});\r\n    }\r\n\r\n    showEventDetails() {\r\n        return this.state.detailsButton === 'show'\r\n        ? null\r\n        : <EventDetails event={this.props.event}/>\r\n    }\r\n\r\n    render() {\r\n        const {event} = this.props;\r\n        const {detailsButton} = this.state;\r\n        return (\r\n            <div className=\"Event-container\">\r\n                <div className=\"Event-details-container\">\r\n                    <h1 className=\"Event-title\">{event.summary}</h1>\r\n                    <p className=\"Event-time\">{new Date(event.start.dateTime).toString()}</p>\r\n                    <p className=\"Event-location\">{`@${event.summary} | ${event.location}`}</p>\r\n                    {this.showEventDetails()}\r\n                </div>\r\n                <button className=\"details-button\" onClick={() => this.handleDetailsButtonClick()}>{`${detailsButton} details`}</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Event","import React, {Component} from 'react';\r\nimport Event from '../Event/Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const {events} = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event => \r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, {Component} from 'react';\r\n\r\nexport default class CitySearch extends Component {\r\n    state = {\r\n        query:'',\r\n        suggestions: [],\r\n        showSuggestions: undefined\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        })\r\n        this.setState({\r\n            query: value,\r\n            suggestions,\r\n        });\r\n    }\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false\r\n        });\r\n\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    render() {\r\n        const {query, suggestions, showSuggestions} = this.state;\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <input type=\"text\"\r\n                className=\"city\"\r\n                value={query}\r\n                onChange={this.handleInputChanged}\r\n                onFocus={() => {this.setState({showSuggestions: true})}}\r\n                />\r\n\r\n                <ul className=\"suggestions\" style={showSuggestions ? {}: {display: 'none'}}>\r\n                    {suggestions.map((suggestion) => (\r\n                        <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\r\n                    ))}\r\n                    <li key='all' onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class NumberOfEvents extends Component {\r\n    state = {\r\n        resultNumber: 32,\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            resultNumber: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {resultNumber} = this.state;\r\n        return (\r\n            <div className=\"NumberOfEvents\">\r\n                <input type=\"number\"\r\n                className=\"number-events\"\r\n                value={resultNumber}\r\n                onChange={this.handleInputChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","const mockData = [\r\n    {\r\n        kind:\"calendar#event\",\r\n        etag:\"\\\"3181161784712000\\\"\",\r\n        id:\"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        status:\"confirmed\",\r\n        htmlLink:\"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        created:\"2020-05-19T19:17:46.000Z\",\r\n        updated:\"2020-05-27T12:01:32.356Z\",\r\n        summary:\"Learn JavaScript\",\r\n        description:\"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        location:\"London, UK\",\r\n        creator:{\r\n            email:\"fullstackwebdev@careerfoundry.com\",\r\n            self:true\r\n        },\r\n        organizer:{\r\n            email:\"fullstackwebdev@careerfoundry.com\",\r\n            self:true\r\n        },\r\n        start:{\r\n            dateTime:\"2020-05-19T16:00:00+02:00\",\r\n            timeZone:\"Europe/Berlin\"\r\n        },\r\n        end:{\r\n            dateTime:\"2020-05-19T17:00:00+02:00\",\r\n            timeZone:\"Europe/Berlin\"\r\n        },\r\n        recurringEventId:\"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        originalStartTime:{\r\n            dateTime:\"2020-05-19T16:00:00+02:00\",\r\n            timeZone:\"Europe/Berlin\"\r\n        },\r\n        iCalUID:\"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        sequence:0,\r\n        reminders:{\r\n            useDefault:true\r\n        },\r\n        eventType:\"default\"\r\n    },\r\n    {\r\n        kind:\"calendar#event\",\r\n        etag:\"\\\"3181159875584000\\\"\",\r\n        id:\"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        status:\"confirmed\",\r\n        htmlLink:\"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        created:\"2020-05-19T19:14:30.000Z\",\r\n        updated:\"2020-05-27T11:45:37.792Z\",\r\n        summary:\"React is Fun\",\r\n        description:\"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        location:\"Berlin, Germany\",\r\n        creator:{\r\n            email:\"fullstackwebdev@careerfoundry.com\",\r\n            self:true\r\n        },\r\n        organizer:{\r\n            email:\"fullstackwebdev@careerfoundry.com\",\r\n            self:true\r\n        },\r\n        start:{\r\n            dateTime:\"2020-05-20T14:00:00+02:00\",\r\n            timeZone:\"Europe/Berlin\"\r\n        },\r\n        end:{\r\n            dateTime:\"2020-05-20T15:00:00+02:00\",\r\n            timeZone:\"Europe/Berlin\"\r\n        },\r\n        recurringEventId:\"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        originalStartTime:{\r\n            dateTime:\"2020-05-20T14:00:00+02:00\",\r\n            timeZone:\"Europe/Berlin\"\r\n        },\r\n        iCalUID:\"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        sequence:0,\r\n        reminders:{\r\n            useDefault:true\r\n        },\r\n        eventType:\"default\"\r\n    }\r\n];\r\n\r\nexport default mockData;","import axios from 'axios';\r\nimport mockData from './mock-data';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n    let extractLocations = events.map((event) => event.location);\r\n    let locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\nexport const limitResults = (results, limit) => {\r\n    if(results.length > limit) {\r\n        let limitedResults = results.slice(0, limit);\r\n        return limitedResults;\r\n    }\r\n\r\n    return results;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n    const results = await fetch(\r\n        `https://oauth2.googleapis.com/tokeninfo?id_token=${accessToken}`\r\n    )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n    return results;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        NProgress.done();\r\n        return mockData;\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n        removeQuery();\r\n        const url = `https://3zlu6dnoc0.execute-api.us-west-1.amazonaws.com/dev/api/get-events/${token}`;\r\n        const results = await axios.get(url);\r\n        if (results.data) {\r\n            let locations = extractLocations(results.data.events);\r\n            localStorage.setItem('lastEvents', JSON.stringify(results.data));\r\n            localStorage.setItem('locations', JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return results.data.events;\r\n    }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if(!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem('access_token');\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get('code');\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                'https://3zlu6dnoc0.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url'\r\n            );\r\n            const {authUrl} = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n}\r\n\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        let newurl = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;\r\n        window.history.pushState('', '', newurl);\r\n    }\r\n\r\n    let newurl = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;\r\n    window.history.pushState('', '', newurl);\r\n};\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const {access_token} = await fetch(\r\n        `https://3zlu6dnoc0.execute-api.us-west-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n    )\r\n    .then((res) => {\r\n        return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem('access_token', access_token);\r\n\r\n    return access_token;\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport EventList from './components/EventList/EventList';\nimport CitySearch from './components/CitySearch/CitySearch';\nimport NumberOfEvents from './components/NumberOfEvents/NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport './nprogress.css';\n\nexport default class App extends Component {\n  state = {\n    events: [],\n    locations: [],\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({events, locations: extractLocations(events)});\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  render() {\n    const {events, locations} = this.state;\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} locations={locations} />\n        <NumberOfEvents />\n        <EventList events={events} />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}